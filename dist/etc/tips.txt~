For any 4D file VoxBo can read, you can access 3D volumes contained
therein with this special syntax: foo.tes:7.  Note that the volumes
are numbered starting with 0.  Similarly, foo.tes:mask gives you the
inclusion mask.
---
vbbatch can help you run repetitive commands more easily and faster.
Specify a command with the string FILE in it and pass a list of files.
The command is run separately for each file.  For example:

  vbbatch -c "myscript.sh FILE" /mydir/data/subjects/* -r

will run myscript.sh on all your subjects.  Note the -r flag at the
end.  The -r flag stands for "really do it."  It's usually a good idea
to run vbbatch once without the -r flag, just to see the commands that
will be run.  If you like what you see, run it again with -r.

Additional tips on using vbbatch:
--> vbbatch is useful for things that have nothing to do with imaging
--> the files you specify don't have to exist -- if you run
      vbbatch -c "touch FILE" a b c -r
    you'll create three files in the current directory

--> you don't need to be running on a cluster to use vbbatch, it will
    parallelize on your desktop machine if you have multiple cores

--> even if you're on a cluster, you can force it to run on your local
    machine by using the --run flag
---
For help with just about any VoxBo command, run it with no arguments.
---
See your tip here!  Send it in and enjoy the adulation of future
generations of grateful VoxBo users.
